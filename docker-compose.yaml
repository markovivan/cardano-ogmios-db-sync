version: "3.8"

services:
  postgres:
    container_name: cardano-db-postgres
    image: postgres:${POSTGRES_VERSION:-11.5-alpine}
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    shm_size: '4gb'
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-backup:/var/lib/postgresql/backup
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  
  cardano-node:
    container_name: cardano-node
    image: inputoutput/cardano-node:${CARDANO_NODE:-1.35.0}
    environment:
      - NETWORK=${NETWORK:-mainnet}
    volumes:
      - node-db:/data
      - node-ipc:/ipc
      - ./cardano-configuration/network/${NETWORK:-mainnet}:/config
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
  
  ogmios:
    container_name: ogmios
    image: cardanosolutions/ogmios:latest-${NETWORK:-mainnet}
    restart: on-failure
    command: [
      "--host", "0.0.0.0",
      "--node-socket", "/ipc/node.socket",
      "--node-config", "/config/cardano-node/config.json"
    ]
    depends_on:
      - cardano-node
    volumes:
      - ./cardano-configuration/network/${NETWORK:-mainnet}:/config
      - ./cardano-configuration/network/${NETWORK:-mainnet}/genesis/alonzo.json:/config/cardano-node/mainnet-alonzo-genesis.json
      - ./cardano-configuration/network/${NETWORK:-mainnet}/genesis/byron.json:/config/cardano-node/mainnet-byron-genesis.json
      - ./cardano-configuration/network/${NETWORK:-mainnet}/genesis/shelley.json:/config/cardano-node/mainnet-shelley-genesis.json
      - node-ipc:/ipc
    ports:
      - ${OGMIOS_PORT:-1337}:1337
  
  cardano-db-sync-extended:
    container_name: cardano-db-sync-extended
    image: inputoutput/cardano-db-sync:${CARDANO_DB_SYNC_VERSION:-13.0.0}
    command: [
      "--config", "/config/cardano-db-sync/config.json",
      "--socket-path", "/node-ipc/node.socket"
    ]
    environment:
      - NETWORK=${NETWORK:-mainnet}
      - EXTENDED=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
    depends_on:
      - cardano-node
      - postgres
    secrets:
      - postgres_password
      - postgres_user
      - postgres_db
    volumes:
      - db-sync-data:/var/lib/cexplorer
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  hasura:
    container_name: hasura
    build:
      context: ./cardano-graphql/packages/api-cardano-db-hasura/hasura
    image: inputoutput/cardano-graphql-hasura:${CARDANO_GRAPHQL_VERSION:-6.2.0}
    ports:
      - ${HASURA_PORT:-8090}:8080
    depends_on:
      - "postgres"
    restart: on-failure
    environment:
      - HASURA_GRAPHQL_ENABLE_CONSOLE=true
      - HASURA_GRAPHQL_CORS_DOMAIN=http://localhost:9695
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  cardano-graphql:
    container_name: cardano-graphql
    build:
      args:
        - NETWORK=${NETWORK:-mainnet}
        - METADATA_SERVER_URI=${METADATA_SERVER_URI:-https://tokens.cardano.org}
      cache_from: [ inputoutput/cardano-graphql:latest ]
      context: ./cardano-graphql/
      target: server
    image: inputoutput/cardano-graphql:${CARDANO_GRAPHQL_VERSION:-6.2.0}-${NETWORK:-mainnet}
    environment:
      - ALLOW_INTROSPECTION=true
      - CACHE_ENABLED=true
      - LOGGER_MIN_SEVERITY=${LOGGER_MIN_SEVERITY:-info}
    expose:
      - ${API_PORT:-3100}
    ports:
      - ${API_PORT:-3100}:3100
    restart: on-failure
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

secrets:
  postgres_db:
    file: ./configuration/secrets/postgres_db
  postgres_password:
    file: ./configuration/secrets/postgres_password
  postgres_user:
    file: ./configuration/secrets/postgres_user
volumes:
  node-db:
  node-ipc:
  db-sync-data:
  postgres-data: